// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model Company {
  id             String    @id @default(cuid())
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  name           String?
  pic            String?
  country_code   String?
  description    String?
  address        String?
  streetAddress  String?   @map("street_address")
  city           String?
  state          String?
  zipCode        String?   @map("zip_code")
  country        String?
  firstName      String?   @map("first_name")
  lastName       String?   @map("last_name")
  email          String?   @unique
  mobile         String?
  accountType    String?   @map("account_type")
  locLatitude    Float?    @map("loc_lat")
  locLongitude   Float?    @map("loc_lon")
  locAltitude    Float?    @default(0) @map("loc_alt")
  registerNo     String?   @map("register_no")
  website        String?
  foundationYear String?
  tagLine        String?   @map("tag_line")
  projects       Project[]

  @@map("tb_company")
}


model Project {
 id             String    @id @default(cuid())
 createdAt      DateTime  @default(now()) @map("created_at")
 updatedAt      DateTime  @updatedAt @map("updated_at")
 name           String   @unique
 description    String?
 logo           String?
 adminEmail     String? @map("admin_email")  
 supportEmail   String? @map("support_email")
 phoneNumber    String? @map("phone_number")
 supportPhone   String? @map("support_phone")
 webUrl         String? @map("web_url")
 currentVersion String? @map("current_version")
 status         String? @map("status")
 companyId      String?  @map("company_id")
 company        Company? @relation(fields: [companyId], references: [id])

  @@map("tb_project")
}

model Screen {
  id             String    @id @default(cuid())
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  name           String?
  components     Component[]

  @@map("tb_screen")
}


model Component{
  id             String    @id @default(cuid())
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  name           String   @unique
  screenId       String?  @map("screen_id")
  screen         Screen? @relation(fields: [screenId], references: [id])

  @@map("tb_component")
}



model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}